package com.joycastle.advertise.mopub;import android.app.Activity;import android.app.Application;import android.content.Intent;import android.os.Bundle;import android.os.Handler;import androidx.annotation.NonNull;import com.joycastle.gamepluginbase.AdvertiseDelegate;import com.joycastle.gamepluginbase.InvokeJavaMethodDelegate;import com.joycastle.gamepluginbase.SystemUtil;import com.mopub.common.MoPub;import com.mopub.common.MoPubReward;import com.mopub.common.SdkConfiguration;import com.mopub.mobileads.MoPubErrorCode;import com.mopub.mobileads.MoPubInterstitial;import com.mopub.mobileads.MoPubRewardedVideoListener;import com.mopub.mobileads.MoPubRewardedVideos;import java.util.ArrayList;import java.util.Set;@SuppressWarnings("unchecked")public class MoPubAdvertiseHelper implements AdvertiseDelegate, MoPubInterstitial.InterstitialAdListener, MoPubRewardedVideoListener {    private static MoPubAdvertiseHelper instance = new MoPubAdvertiseHelper();    private MoPubInterstitial mInterstitial;    private String interstitialId = null;    private String rewardVideoId = null;    private boolean interstitialAdClicked = false;    private InvokeJavaMethodDelegate interstitialAdListener = null;    private boolean rewardAdViewed = false;    private boolean rewardAdClicked = false;    private InvokeJavaMethodDelegate rewardAdListener = null;    public static MoPubAdvertiseHelper getInstance() {        return instance;    }    private MoPubAdvertiseHelper() {}    @Override    public void setBannerAdName(String name) {    }    @Override    public void setSpotAdNames(ArrayList names) {    }    @Override    public void setVideoAdNames(ArrayList names) {    }    @Override    public int showBannerAd(boolean protrait, boolean bottom) {        return 0;    }    @Override    public void hideBannerAd() {    }    @Override    public boolean isInterstitialAdReady() {        return mInterstitial.isReady();    }    @Override    public boolean showInterstitialAd(InvokeJavaMethodDelegate listener) {        if (mInterstitial.isReady()) {            interstitialAdClicked  = false;            interstitialAdListener = listener;            mInterstitial.show();            return true;        } else {            // Caching is likely already in progress if `isReady()` is false.            // Avoid calling `load()` here and instead rely on the callbacks as suggested below.            mInterstitial.load();            return false;        }    }    @Override    public boolean isVideoAdReady() {        return MoPubRewardedVideos.hasRewardedVideo(rewardVideoId);    }    @Override    public boolean showVideoAd(InvokeJavaMethodDelegate listener) {        if (MoPubRewardedVideos.hasRewardedVideo(rewardVideoId)) {            rewardAdViewed = false;            rewardAdClicked = false;            rewardAdListener = listener;            MoPubRewardedVideos.showRewardedVideo(rewardVideoId);            return true;        }        else {            MoPubRewardedVideos.loadRewardedVideo(rewardVideoId);            return false;        }    }    @Override    public String getName() {        return "MoPub";    }    @Override    public void init(Application application) {        String mopubAdId = SystemUtil.getInstance().getPlatCfgValue("mopub_app_id");        SdkConfiguration sdkConfiguration =                new SdkConfiguration.Builder(mopubAdId).build();        MoPub.initializeSdk(application.getApplicationContext(), sdkConfiguration, null);    }    @Override    public void onCreate(Activity activity, Bundle savedInstanceState) {        interstitialId  = SystemUtil.getInstance().getPlatCfgValue("mopub_interstitial_id");        rewardVideoId   = SystemUtil.getInstance().getPlatCfgValue("mopub_rewardVideo_id");        //init Interstitial        mInterstitial = new MoPubInterstitial(activity, interstitialId);        mInterstitial.setInterstitialAdListener(this);        mInterstitial.load();        //load rewardVideoAD        MoPubRewardedVideos.loadRewardedVideo(rewardVideoId);    }    @Override    public void onStart(Activity activity) {        MoPub.onStart(activity);    }    @Override    public void onResume(Activity activity) {        MoPub.onResume(activity);    }    @Override    public void onPause(Activity activity) {        MoPub.onPause(activity);    }    @Override    public void onStop(Activity activity) {        MoPub.onStop(activity);    }    @Override    public void onDestroy(Activity activity) {        MoPub.onDestroy(activity);    }    @Override    public void onActivityResult(Activity activity, int requestCode, int resultCode, Intent data) {    }    @Override    public void onInterstitialLoaded(MoPubInterstitial interstitial) {        interstitialAdClicked = true;    }    @Override    public void onInterstitialFailed(MoPubInterstitial interstitial, MoPubErrorCode errorCode) {        new Handler().postDelayed(new Runnable() {            @Override            public void run() {                mInterstitial.load();            }        }, 5000);    }    @Override    public void onInterstitialShown(MoPubInterstitial interstitial) {        ArrayList arrayList = new ArrayList();        arrayList.add(interstitialAdClicked);        interstitialAdListener.onFinish(arrayList);        mInterstitial.load();    }    @Override    public void onInterstitialClicked(MoPubInterstitial interstitial) {        interstitialAdClicked = true;    }    @Override    public void onInterstitialDismissed(MoPubInterstitial interstitial) {    }    @Override    public void onRewardedVideoLoadSuccess(@NonNull String adUnitId) {    }    @Override    public void onRewardedVideoLoadFailure(@NonNull String adUnitId, @NonNull MoPubErrorCode errorCode) {        new Handler().postDelayed(new Runnable() {            @Override            public void run() {                MoPubRewardedVideos.loadRewardedVideo(rewardVideoId);            }        }, 5000);    }    @Override    public void onRewardedVideoStarted(@NonNull String adUnitId) {    }    @Override    public void onRewardedVideoPlaybackError(@NonNull String adUnitId, @NonNull MoPubErrorCode errorCode) {    }    @Override    public void onRewardedVideoClicked(@NonNull String adUnitId) {        rewardAdClicked = true;    }    @Override    public void onRewardedVideoClosed(@NonNull String adUnitId) {        ArrayList arrayList = new ArrayList();        arrayList.add(rewardAdViewed);        arrayList.add(rewardAdClicked);        rewardAdListener.onFinish(arrayList);        MoPubRewardedVideos.loadRewardedVideo(rewardVideoId);    }    @Override    public void onRewardedVideoCompleted(@NonNull Set<String> adUnitIds, @NonNull MoPubReward reward) {        rewardAdViewed = true;    }}