package com.joycastle.analytic.facebook;import android.app.Activity;import android.app.Application;import android.content.Intent;import android.os.Bundle;import android.util.Log;import com.facebook.appevents.AppEventsConstants;import com.facebook.appevents.AppEventsLogger;import com.joycastle.gamepluginbase.AnalyticDelegate;import org.json.JSONException;import org.json.JSONObject;import java.util.Currency;import java.util.HashMap;import java.util.Iterator;import java.util.Locale;import java.util.Map;public class FBAnalyticHelper implements AnalyticDelegate {    private AppEventsLogger logger;    private static final String TAG = "FBAnalyticHelper";    private static FBAnalyticHelper instance = new FBAnalyticHelper();    public static FBAnalyticHelper getInstance() {        return instance;    }    private FBAnalyticHelper() {}    @Override    public void setAccoutInfo(HashMap<String, Object> map) {    }    @Override    public void onEvent(String eventId) {        logger.logEvent(eventId);    }    @Override    public void onEvent(String eventId, String eventLabel) {        Bundle parameters = new Bundle();        parameters.putString(eventId,eventLabel);        logger.logEvent(eventId,parameters);    }    @Override    public void onEvent(String eventId, HashMap<String, String> eventData) {        Bundle parameters = new Bundle();        Iterator iterator = eventData.entrySet().iterator();        while (iterator.hasNext()) {            Map.Entry entry = (Map.Entry) iterator.next();            parameters.putString(String.valueOf(entry.getKey()), String.valueOf(entry.getValue()));        }        logger.logEvent(eventId,parameters);    }    @Override    public void setLevel(int level) {    }    @Override    public void charge(String iapId, double cash, double coin, int channal) {        Currency currency = Currency.getInstance(Locale.US);        String currencyCode = currency.getCurrencyCode();        Bundle parameters = new Bundle();        parameters.putString(AppEventsConstants.EVENT_PARAM_CURRENCY, currencyCode);        parameters.putString(AppEventsConstants.EVENT_PARAM_CONTENT_TYPE, "product");        JSONObject jso = new JSONObject();        try {            jso.put("id",iapId);            jso.put("quantity",coin);            jso.put("price",cash);        } catch (JSONException e) {            e.printStackTrace();        }        parameters.putString(AppEventsConstants.EVENT_PARAM_CONTENT, jso.toString());        logger.logEvent(AppEventsConstants.EVENT_NAME_PURCHASED,                cash,                parameters);    }    @Override    public void reward(double coin, int reason) {    }    @Override    public void purchase(String good, int amount, double coin) {    }    @Override    public void use(String good, int amount, double coin) {    }    @Override    public void onMissionBegin(String missionId) {    }    @Override    public void onMissionCompleted(String missionId) {    }    @Override    public void onMissionFailed(String missionId, String reason) {    }    @Override    public void init(Application application) {        AppEventsLogger.activateApp(application);        logger = AppEventsLogger.newLogger(application);        Log.i(TAG, "init: ");    }    @Override    public void onCreate(Activity activity, Bundle savedInstanceState) {        Log.i(TAG, "onCreate: ");    }    @Override    public void onStart(Activity activity) {    }    @Override    public void onResume(Activity activity) {    }    @Override    public void onPause(Activity activity) {    }    @Override    public void onStop(Activity activity) {    }    @Override    public void onDestroy(Activity activity) {    }    @Override    public void onActivityResult(Activity activity, int requestCode, int resultCode, Intent data) {    }}